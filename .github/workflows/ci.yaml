name: ci-golang-workflow
on: 
  pull_request:
    branches:
      - develop

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set golang
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: http://127.0.0.1:9000
          SONAR_TOKEN: sqp_f720f67eaa62fb88bbb5c428dae41c260ddddf70

          # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - 
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


      - 
        name: Run tests
        run: go test
      - 
        name: Run build
        run: go run main.go

      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: chrissgon/goci:latest